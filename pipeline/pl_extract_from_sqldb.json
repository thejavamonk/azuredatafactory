{
	"name": "pl_extract_from_sqldb",
	"properties": {
		"activities": [
			{
				"name": "extract_from_sqldb",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "get_task_parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[control].[sp_task_parameters]",
						"storedProcedureParameters": {
							"job": {
								"type": "String",
								"value": "load_customer"
							},
							"job_id": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"task": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							},
							"task_id": {
								"type": "String",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							"task_sequence": {
								"type": "Int32",
								"value": "1"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_generic_azure_sqldb",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_generic_adls_csv",
						"type": "DatasetReference",
						"parameters": {
							"p_target_folder": {
								"value": "@activity('get_task_parameters').output.firstRow.tgt_folder",
								"type": "Expression"
							},
							"p_target_filename": {
								"value": "@activity('get_task_parameters').output.firstRow.tgt_filename",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "get_task_parameters",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select src_sql, tgt_folder, tgt_filename\nfrom\n(\nselect jtp.job, jtp.task, jtp.task_sequence, jtp.parameter, jtp.value\nfrom [config].[job_task_parameters] jtp\njoin [config].[task_parameters] tp\non jtp.task = tp.task \nand jtp.parameter = tp.parameter\nand jtp.active = 'Y'\nand tp.active = 'Y'\nand tp.parameter_type = 'static'\nwhere jtp.job = 'load_customer'\nand jtp.task = 'pl_extract_from_sqldb'\n) as n\npivot\n(\n\tmax(value) for parameter in (src_sql, tgt_folder, tgt_filename)\n) as p",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_generic_azure_sqldb",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			}
		],
		"folder": {
			"name": "framework"
		},
		"annotations": []
	}
}